# Copyright (C) 2023  Christian Berger
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Which Docker image shall be used on the GitLab runner?
image: docker:19.03.3

# Details about how to connect to the Docker service to run this build.
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2


services:
  - name: docker:19.03.3-dind
    alias: docker
    

stages:
  - build
  - deploy
  #- test

# Display information before we start the build.
before_script:
  - docker info # display system wide info about the Docker
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


# This section describes what shall be done to build and test the project.
build-and-test:
  tags:
    - docker-build
  stage: build
  rules: 
  - if: $CI_COMMIT_TAG == null
  script:
   - docker build -f Dockerfile .



# This section describes what shall be done to deploy artefacts from the project.
release:
  tags:
    - docker-build
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/
      when: always
  script:
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes 
  - mkdir -p ~/.docker/cli-plugins
  - cd ~/.docker/cli-plugins/
  - wget https://github.com/docker/buildx/releases/download/v0.7.1/buildx-v0.7.1.linux-amd64
  - mv buildx-v0.7.1.linux-amd64 docker-buildx
  - chmod 755 docker-buildx
  - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx create --name platformbuilder --use
  - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx inspect --bootstrap
  - cd /builds/courses/dit638/students/2023-group-09
  - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx build --platform "linux/amd64,linux/arm/v7" -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" --push .


#test:
  #stage: test
  #script:
    #- cd build
    #- make test
    #- gcovr --xml-pretty --exclude-unreachable-branches --print-summary -o coverage.xml --root ${CI_PROJECT_DIR}
  #coverage: /^\s*lines:\s*\d+.\d+\%/
  #artifacts:
    #name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    #expire_in: 2 days
    #reports:
      #coverage_report:
        #coverage_format: cobertura
        #path: build/coverage.xml
